// Code generated by go-swagger; DO NOT EDIT.

package queries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/recolabs/reco/redash-client/gen/models"
)

// PostQueriesIDReader is a Reader for the PostQueriesID structure.
type PostQueriesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostQueriesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostQueriesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPostQueriesIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostQueriesIDOK creates a PostQueriesIDOK with default headers values
func NewPostQueriesIDOK() *PostQueriesIDOK {
	return &PostQueriesIDOK{}
}

/* PostQueriesIDOK describes a response with status code 200, with default header values.

Returned query object
*/
type PostQueriesIDOK struct {
	Payload *models.Query
}

func (o *PostQueriesIDOK) Error() string {
	return fmt.Sprintf("[POST /queries/{id}][%d] postQueriesIdOK  %+v", 200, o.Payload)
}
func (o *PostQueriesIDOK) GetPayload() *models.Query {
	return o.Payload
}

func (o *PostQueriesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Query)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostQueriesIDDefault creates a PostQueriesIDDefault with default headers values
func NewPostQueriesIDDefault(code int) *PostQueriesIDDefault {
	return &PostQueriesIDDefault{
		_statusCode: code,
	}
}

/* PostQueriesIDDefault describes a response with status code -1, with default header values.

error
*/
type PostQueriesIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post queries ID default response
func (o *PostQueriesIDDefault) Code() int {
	return o._statusCode
}

func (o *PostQueriesIDDefault) Error() string {
	return fmt.Sprintf("[POST /queries/{id}][%d] PostQueriesID default  %+v", o._statusCode, o.Payload)
}
func (o *PostQueriesIDDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostQueriesIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostQueriesIDBody post queries ID body
swagger:model PostQueriesIDBody
*/
type PostQueriesIDBody struct {

	// id
	ID int64 `json:"id,omitempty"`

	// is draft
	// Required: true
	IsDraft *bool `json:"is_draft"`

	// version
	Version *int64 `json:"version,omitempty"`
}

// Validate validates this post queries ID body
func (o *PostQueriesIDBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateIsDraft(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostQueriesIDBody) validateIsDraft(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"is_draft", "body", o.IsDraft); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post queries ID body based on context it is used
func (o *PostQueriesIDBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostQueriesIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostQueriesIDBody) UnmarshalBinary(b []byte) error {
	var res PostQueriesIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
